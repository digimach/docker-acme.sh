# This workflow checks acme.sh for new release and creates the artifacts in this
# repository
name: acme.sh new release workflow

on:
  push:
    branches:
      - "main"
    paths:
      - '.github/workflows/acmesh_release_check/**'
      - '.github/workflows/acmesh_release_check.yaml'
  schedule:
    - cron:  '13 3 * * *'
  workflow_dispatch:
    inputs:
      acmesh_version:
          description: acme.sh version for which to setup the repository
          required: true

concurrency:
  group: ci-acmesh_release_check
  cancel-in-progress: true

jobs:
  check_acmesh_version:
    name: Check for new acme.sh version
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.check_and_push_stable.outputs.new_version == 'true' }}
      new_branch: ${{ steps.check_and_push_stable.outputs.new_branch }}
      new_release_version: ${{ steps.check_and_push_stable.outputs.new_release_version }}
    steps:
      - name: Checkout Code
        id: checkout_code
        uses: actions/checkout@v2  
        with:
          fetch-depth: 0 

      - name: Check acme.sh release and push stable branch
        id: check_and_push_stable
        run: .github/workflows/scripts/acmesh_release_check/check_and_push_stable.sh
        env:
          EVENT_NAME: "${{ github.event_name }}"
          ACMESH_VERSION: ${{ github.event.inputs.acmesh_version }}

  create_release:
    name: Create new release
    runs-on: ubuntu-latest
    needs: 
      - check_acmesh_version
    if: ${{ needs.check_acmesh_version.outputs.new_version }}
    steps:
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          target_commitish: ${{ needs.check_acmesh_version.outputs.new_branch }}
          tag_name: "v${{ needs.check_acmesh_version.outputs.new_release_version }}"
          name: acme.sh ${{ needs.check_acmesh_version.outputs.new_release_version }} Docker Container
          draft: true
